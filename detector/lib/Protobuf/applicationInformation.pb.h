/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Wed Aug 22 07:15:07 2018. */

#ifndef PB_APPLICATIONINFORMATION_PB_H_INCLUDED
#define PB_APPLICATIONINFORMATION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _requestSoftwareInformation_InformationType {
    requestSoftwareInformation_InformationType_FIRMWARE_VERSION = 1
} requestSoftwareInformation_InformationType;
#define _requestSoftwareInformation_InformationType_MIN requestSoftwareInformation_InformationType_FIRMWARE_VERSION
#define _requestSoftwareInformation_InformationType_MAX requestSoftwareInformation_InformationType_FIRMWARE_VERSION
#define _requestSoftwareInformation_InformationType_ARRAYSIZE ((requestSoftwareInformation_InformationType)(requestSoftwareInformation_InformationType_FIRMWARE_VERSION+1))

/* Struct definitions */
typedef struct _firmwareVersion {
    uint32_t major;
    uint32_t minor;
    uint32_t patch;
    uint32_t hotfix;
/* @@protoc_insertion_point(struct:firmwareVersion) */
} firmwareVersion;

typedef struct _requestSoftwareInformation {
    requestSoftwareInformation_InformationType information;
/* @@protoc_insertion_point(struct:requestSoftwareInformation) */
} requestSoftwareInformation;

/* Default values for struct fields */
extern const requestSoftwareInformation_InformationType requestSoftwareInformation_information_default;

/* Initializer values for message structs */
#define requestSoftwareInformation_init_default  {requestSoftwareInformation_InformationType_FIRMWARE_VERSION}
#define firmwareVersion_init_default             {0, 0, 0, 0}
#define requestSoftwareInformation_init_zero     {_requestSoftwareInformation_InformationType_MIN}
#define firmwareVersion_init_zero                {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define firmwareVersion_major_tag                1
#define firmwareVersion_minor_tag                2
#define firmwareVersion_patch_tag                3
#define firmwareVersion_hotfix_tag               4
#define requestSoftwareInformation_information_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t requestSoftwareInformation_fields[2];
extern const pb_field_t firmwareVersion_fields[5];

/* Maximum encoded size of messages (where known) */
#define requestSoftwareInformation_size          2
#define firmwareVersion_size                     24

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define APPLICATIONINFORMATION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
