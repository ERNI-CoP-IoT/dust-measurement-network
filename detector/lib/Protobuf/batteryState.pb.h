/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Sun Aug  5 17:39:22 2018. */

#ifndef PB_BATTERYSTATE_PB_H_INCLUDED
#define PB_BATTERYSTATE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _batteryState {
    float voltage;
/* @@protoc_insertion_point(struct:batteryState) */
} batteryState;

/* Default values for struct fields */

/* Initializer values for message structs */
#define batteryState_init_default                {0}
#define batteryState_init_zero                   {0}

/* Field tags (for use in manual encoding/decoding) */
#define batteryState_voltage_tag                 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t batteryState_fields[2];

/* Maximum encoded size of messages (where known) */
#define batteryState_size                        5

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define BATTERYSTATE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
